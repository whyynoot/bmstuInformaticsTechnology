// Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/auth/login": {
            "post": {
                "description": "Log in with username and password",
                "tags": [
                    "User"
                ],
                "summary": "Log in",
                "parameters": [
                    {
                        "description": "User",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.AuthorizationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/auth/signup": {
            "post": {
                "description": "Sign up a new user with username and password",
                "tags": [
                    "User"
                ],
                "summary": "Signing up new user",
                "parameters": [
                    {
                        "description": "User",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user_service.UserDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.AuthorizationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/categories": {
            "get": {
                "description": "Get a list of all categories",
                "tags": [
                    "Category"
                ],
                "summary": "Get a list of all categories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/categories.CategoryList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/categories/create": {
            "post": {
                "description": "CreateNewProduct with json struct",
                "tags": [
                    "Category"
                ],
                "summary": "Creating New Category",
                "parameters": [
                    {
                        "description": "Category",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/category_service.CategoryCreateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/categories.CategoryCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/categories/update": {
            "patch": {
                "description": "Update any field / fields of category\nOnly ID is required",
                "tags": [
                    "Category"
                ],
                "summary": "Updating category information",
                "parameters": [
                    {
                        "description": "Category",
                        "name": "product",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/category_service.CategoryUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/categories.CategoryUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/product/create": {
            "post": {
                "description": "CreateNewProduct with json struct",
                "tags": [
                    "Product"
                ],
                "summary": "Creating New Product",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/product_service.NewProductDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.ProductCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/product/delete": {
            "delete": {
                "description": "Delete product by UUID",
                "tags": [
                    "Product"
                ],
                "summary": "Deletion of product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "UUID of product",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.ProductDeleteResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/product/update": {
            "patch": {
                "description": "Update any field / fields of product\nOnly ID is required",
                "tags": [
                    "Product"
                ],
                "summary": "Updating product information",
                "parameters": [
                    {
                        "description": "Product",
                        "name": "product",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/product_service.ProductUpdateDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.ProductCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/products": {
            "get": {
                "description": "Getting a list of user products",
                "tags": [
                    "Product"
                ],
                "summary": "Getting a list of user products",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.ProductList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        },
        "/api/{category_api_name}/products": {
            "get": {
                "description": "Getting a list of user products based on category",
                "tags": [
                    "Product"
                ],
                "summary": "Getting a list of user products based on category",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category_api_name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/products.ProductList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.AppError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "auth.AuthorizationResponse": {
            "type": "object",
            "properties": {
                "refresh_token": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.UserLoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "categories.CategoryCreateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "categories.CategoryList": {
            "type": "object",
            "properties": {
                "categories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/category_service.UserCategory"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "categories.CategoryUpdateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "category_service.CategoryCreateDTO": {
            "type": "object",
            "properties": {
                "api_name": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                }
            }
        },
        "category_service.CategoryUpdateDTO": {
            "type": "object",
            "properties": {
                "api_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name_ru": {
                    "type": "string"
                }
            }
        },
        "category_service.UserCategory": {
            "type": "object",
            "properties": {
                "api_name": {
                    "type": "string"
                },
                "name_ru": {
                    "type": "string"
                }
            }
        },
        "product_service.NewProductDTO": {
            "type": "object",
            "properties": {
                "api_name": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "product_service.ProductUpdateDTO": {
            "type": "object",
            "properties": {
                "api_name": {
                    "type": "string"
                },
                "category_id": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "product_service.UserProduct": {
            "type": "object",
            "properties": {
                "api_name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "image_path": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "products.ProductCreateResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "products.ProductDeleteResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "products.ProductList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/product_service.UserProduct"
                    }
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "user_service.UserDTO": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Product Service",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
